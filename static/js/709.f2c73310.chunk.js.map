{"version":3,"file":"static/js/709.f2c73310.chunk.js","mappings":"yOACA,GAAgB,eAAiB,8BAA8B,SAAW,wBAAwB,KAAO,oBAAoB,UAAY,yBAAyB,MAAQ,qBAAqB,QAAU,wB,UCgGzM,EA1Fc,WAEV,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACjB,MAAwBA,EAAEC,cAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAGd,OAAQD,GACJ,IAAK,QACDN,EAASO,GACT,MAEJ,IAAK,WACDL,EAAYK,GAMvB,EAUKC,EAAQ,WAEVR,EAAS,IACTE,EAAY,GACf,EAED,OACI,iBAEIO,UAAS,UAAKC,EAAAA,eAAL,cAFb,WAII,gBAAKD,UAAWC,EAAAA,SAAhB,UACI,kBAAMC,SApBO,SAACP,GACtBA,EAAEQ,iBACFhB,GAASiB,EAAAA,EAAAA,IAAM,CAAEd,MAAAA,EAAOE,SAAAA,KAExBO,GACH,EAe6CC,UAAWC,EAAAA,KAA7C,WACI,kBAAOD,UAAWC,EAAAA,MAAlB,UAEI,kBACII,KAAK,QACLR,KAAK,QACLC,MAAOR,EACPgB,SAAUZ,EACVM,UAAWC,EAAAA,MACXM,YAAY,QAGZC,UAAQ,OAGhB,kBAAOR,UAAWC,EAAAA,MAAlB,UAEI,kBACII,KAAK,WACLR,KAAK,WACLC,MAAON,EACPc,SAAUZ,EACVM,UAAWC,EAAAA,MACXM,YAAY,WAGZC,UAAQ,OAGhB,mBAAQH,KAAK,SAASL,UAAWC,EAAAA,IAAjC,yBAGR,iBAAKD,UAAWC,EAAAA,UAAhB,WACI,eAAID,UAAWC,EAAAA,MAAf,8BACA,SAAC,KAAD,CACIQ,GAAG,YACHT,UAAWC,EAAAA,QAFf,+BAUf,C","sources":["webpack://react-homework-template/./src/pages/Login/Login.module.css?b420","pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginContainer\":\"Login_loginContainer__xABI1\",\"leftPart\":\"Login_leftPart__WwDzv\",\"form\":\"Login_form__HoQ6M\",\"rightPart\":\"Login_rightPart__xb3Vj\",\"title\":\"Login_title__SJ0Uv\",\"navLink\":\"Login_navLink__2NDfS\"};","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { NavLink } from 'react-router-dom';\n// import { useLogInMutation } from \"redux/contactsSlice\";\nimport { logIn } from \"redux/auth/auth-operation\";\nimport s from './Login.module.css';\n\nconst Login = () => {\n    // const [logIn] = useLogInMutation()\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleChange = e => {\n        const { name, value } = e.currentTarget; // отримую значення в імпуті\n\n        // залежно від того яке поле міняється, то я записую в стейт\n        switch (name) {\n            case \"email\":\n                setEmail(value)\n                break;\n            \n            case \"password\":\n                setPassword(value);\n                break;\n        \n            default:\n                break;\n        }\n    };\n\n    const handleAddContact = (e) => {\n        e.preventDefault();\n        dispatch(logIn({ email, password }))\n        // logIn({email, password})\n        reset()\n    };\n\n\n    const reset = () => {\n        // очищую імпути\n        setEmail('');\n        setPassword('');\n    };\n\n    return (\n        <div\n            // className={`container {s.loginContainer{}`}\n            className={`${s.loginContainer} container`}\n        >\n            <div className={s.leftPart}>\n                <form onSubmit={handleAddContact} className={s.form}>\n                    <label className={s.label}>\n                        {/* Email */}\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={email}\n                            onChange={handleChange}\n                            className={s.input}\n                            placeholder=\"email\"\n                            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                            required\n                        />\n                    </label>\n                    <label className={s.label}>\n                        {/* Password */}\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            value={password}\n                            onChange={handleChange}\n                            className={s.input}\n                            placeholder=\"password\"\n                            // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                            required\n                        />\n                    </label>\n                    <button type=\"submit\" className={s.btn}>Login</button>\n                </form>\n            </div>\n            <div className={s.rightPart}>\n                <h2 className={s.title}>Not registered?</h2>\n                <NavLink\n                    to='/register'\n                    className={s.navLink}\n                >\n                    Registration\n            </NavLink>\n            </div>\n        </div>\n        \n    );\n};\n\nexport default Login;"],"names":["dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","e","currentTarget","name","value","reset","className","s","onSubmit","preventDefault","logIn","type","onChange","placeholder","required","to"],"sourceRoot":""}