{"version":3,"file":"static/js/199.36847d95.chunk.js","mappings":"+NACA,EAAuB,uBAAvB,EAAsD,wBAAtD,EAAsF,wBAAtF,EAAoH,sB,UC4FpH,EAvFiB,WACb,IAAMA,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACjB,MAAwBA,EAAEC,cAAlBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAGd,OAAQT,GACJ,IAAK,OACDC,EAAQQ,GACR,MAEJ,IAAK,QACDN,EAASM,GACT,MAEJ,IAAK,WACDJ,EAAYI,GAMvB,EAUKC,EAAQ,WAEVT,EAAQ,IACRE,EAAS,IACTE,EAAY,GACf,EAED,OACI,kBAAMM,SAhBqB,SAACJ,GAC5BA,EAAEK,iBACFf,GAASgB,EAAAA,EAAAA,IAAS,CAACb,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAEhCM,GACH,EAW2CI,UAAWC,EAAnD,WACI,mBAAOD,UAAWC,EAAlB,mBACI,kBACIC,KAAK,OACLhB,KAAK,OACLS,MAAOT,EACPiB,SAAUX,EACVQ,UAAWC,EACXG,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGhB,mBAAON,UAAWC,EAAlB,oBACI,kBACIC,KAAK,QACLhB,KAAK,QACLS,MAAOP,EACPe,SAAUX,EACVQ,UAAWC,EAGXK,UAAQ,QAGhB,mBAAON,UAAWC,EAAlB,uBACI,kBACIC,KAAK,WACLhB,KAAK,WACLS,MAAOL,EACPa,SAAUX,EACVQ,UAAWC,EAGXK,UAAQ,QAGhB,mBAAQJ,KAAK,SAASF,UAAWC,EAAjC,4BAGX,C","sources":["webpack://react-homework-template/./src/pages/Register/Register.module.css?12fc","pages/Register/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Register_form__c8aUa\",\"label\":\"Register_label__KQhFe\",\"input\":\"Register_input__d+3tu\",\"btn\":\"Register_btn__Od0XL\"};","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"redux/auth/auth-operation\";\n// import { useRegisterUserMutation } from \"redux/contactsSlice\";\nimport s from './Register.module.css';\n\nconst Register = () => {\n    const dispatch = useDispatch();\n    // const [registerUser] = useRegisterUserMutation()\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleChange = e => {\n        const { name, value } = e.currentTarget; // отримую значення в імпуті\n\n        // залежно від того яке поле міняється, то я записую в стейт\n        switch (name) {\n            case \"name\":\n                setName(value)\n                break;\n            \n            case \"email\":\n                setEmail(value)\n                break;\n            \n            case \"password\":\n                setPassword(value);\n                break;\n        \n            default:\n                break;\n        }\n    };\n\n    const handleRegistrationUser = (e) => {\n        e.preventDefault();\n        dispatch(register({name, email, password}))\n        // registerUser({name, email, password})\n        reset()\n    };\n\n\n    const reset = () => {\n        // очищую імпути\n        setName('');\n        setEmail('');\n        setPassword('');\n    };\n\n    return (\n        <form onSubmit={handleRegistrationUser} className={s.form}>\n            <label className={s.label}> Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handleChange}\n                    className={s.input}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n            </label>\n            <label className={s.label}> Email\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={handleChange}\n                    className={s.input}\n                    // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n            </label>\n            <label className={s.label}> Password\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={handleChange}\n                    className={s.input}\n                    // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                />\n            </label>\n            <button type=\"submit\" className={s.btn}>Registration</button>\n        </form>\n    );\n};\n\nexport default Register;"],"names":["dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","register","className","s","type","onChange","pattern","title","required"],"sourceRoot":""}