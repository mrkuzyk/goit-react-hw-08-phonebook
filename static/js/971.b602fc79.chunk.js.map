{"version":3,"file":"static/js/971.b602fc79.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","helpers/getVisibleContact.js","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","webpack://react-homework-template/./src/components/TotalContacts/TotalContacts.module.css?81aa","components/TotalContacts/TotalContacts.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\"};","import { useState } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { addContact } from \"redux/contact/contact-operation\";\nimport { useGetContactsQuery, useAddContactMutation } from \"redux/contactsSlice\";\nimport s from './ContactForm.module.css'\n\n// onSubmit це пропси які приймаються тут\nexport default function ContactForm({ onSubmit }) {\n    // const dispatch = useDispatch()\n    const { data: contacts} = useGetContactsQuery(); // всі контакти\n    const [addContact] = useAddContactMutation(); \n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleChange = e => {\n        const { name, value } = e.currentTarget; // отримую значення в імпуті\n\n        // залежно від того яке поле міняється, то я записую в стейт\n        switch (name) {\n            case \"name\":\n                setName(value)\n                break;\n            \n            case \"number\":\n                setNumber(value);\n                break;\n        \n            default:\n                break;\n        }\n    };\n\n    const handleAddContact = async (e) => {\n        e.preventDefault();\n\n        try {\n            if (contacts.some(contact => contact.name === name)) { \n                return alert(`${name} is already in contacts`); // якщо в контактах є вже таке ім'я то видає помилку \n            };\n            await addContact({ name, number }) // виконую додавання контакту\n            // await dispatch(addContact({ name, phone }))\n            reset(); \n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n\n    const reset = () => {\n        // очищую імпути\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <form onSubmit={handleAddContact} className={s.form}>\n            <label className={s.label}>\n                {/* Name */}\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handleChange}\n                    className={s.input}\n                    placeholder=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n            </label>\n            <label className={s.label}>\n                {/* Number */}\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    onChange={handleChange}\n                    className={s.input}\n                    placeholder=\"phone number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                />\n            </label>\n            <button type=\"submit\" className={s.btn}>Add</button>\n        </form>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"items\":\"ContactItem_items__SjXY8\",\"info\":\"ContactItem_info__fyb5q\",\"span\":\"ContactItem_span__8yGo-\",\"btn\":\"ContactItem_btn__1h5dG\"};","import PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number, onClick }) => {\n    return (\n        <li key={id} className={s.items} id=\"btn\">\n            <p className={s.info}>{name} : <span className={s.span}>{number}</span></p>\n            <button\n                type='button'\n                className={s.btn}\n                onClick={onClick}\n            >\n                Delete\n            </button>\n        </li>\n    )\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"title\":\"ContactList_title__gpugJ\"};","const getVisibleContact = (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase(); // що не було похибки, то підношу всі до великих букв\n    // return\n    const filteredContact = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter)); // фільтрую і повертаю тільки ті контакти, які відповідають пошуку\n    // const firstNewContact = [...filteredContact].sort((a, b) => b.id - a.id); // cортування по останніх доданих через айді, але для дуже крутих не підійде \n    // console.log(filteredContact);\n    return filteredContact\n};\n\nexport default getVisibleContact;","import ContactItem from '../ContactItem/ContactItem';\nimport s from './ContactList.module.css';\nimport { useGetContactsQuery, useDeleteContactMutation } from \"redux/contactsSlice\";\nimport { useSelector } from \"react-redux\";\nimport { getFilter } from 'redux/selectors';\nimport getVisibleContact from \"helpers/getVisibleContact\";\n\nconst ContactList = ({ onDeleteContact }) => {\n    const { data: contacts } = useGetContactsQuery(); // всі контакти\n    const totalContacts = contacts?.length;\n    const [deleteContact] = useDeleteContactMutation();\n    const filter = useSelector(getFilter);\n    const filteredContacts = getVisibleContact(filter, contacts);\n\n    const handleDeleteContact = (id) => {\n        deleteContact(id)\n    };\n    \n    return (\n        totalContacts >= 1\n            ?\n            <ul className={s.list}>\n                {filteredContacts.map(({ id, name, number }) =>\n                    <ContactItem\n                        key={id}\n                        id={id}\n                        name={name}\n                        number={number}\n                        onClick={() => handleDeleteContact(id)}\n                    />\n                )}\n            </ul>\n            :\n            <p className={s.title}>You have no contacts yet</p>\n            \n    );\n};\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"Filter_filterBox__A-UPt\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from 'redux/selectors';\nimport { filtered } from \"redux/searchFilterSlice\";\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilter);\n\n    const searchFilter = e => {\n        dispatch(filtered(e.currentTarget.value)) // отримую значення з інпуту і записую його\n    };\n    \n    return (\n        <div className={s.filterBox}>\n            <label className={s.label}> Find contacts by name\n                <input\n                    type=\"text\"\n                    value={filter}\n                    onChange={searchFilter}\n                    className={s.input}\n                    placeholder=\"enter name\"\n                />\n            </label>\n        </div>\n    );\n};\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Contacts_filter__oiEng\",\"contactsContainer\":\"Contacts_contactsContainer__7xvg8\",\"leftSide\":\"Contacts_leftSide__xewMI\",\"title\":\"Contacts_title__LxdN4\",\"rightSide\":\"Contacts_rightSide__dFLSP\"};","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"TotalContacts_box__HnAU0\",\"title\":\"TotalContacts_title__WJWUL\"};","import { useGetContactsQuery } from \"redux/contactsSlice\";\nimport s from './TotalContacts.module.css';\n\nconst TotalContacts = () => {\n    const { data: contacts } = useGetContactsQuery(); // всі контакти\n    const totalContacts = contacts?.length;\n\n    return (\n        <div className={s.box}>\n            {contacts && <p className={s.title}>You have {totalContacts} {totalContacts === 1 ? `contact` : `contacts`} </p>}\n        </div>\n    );\n};\n\nexport default TotalContacts;","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport s from './Contacts.module.css'\nimport { useGetContactsQuery } from \"redux/contactsSlice\";\nimport Loader from 'components/Loader/Loader';\nimport TotalContacts from 'components/TotalContacts/TotalContacts';\n\nconst Contacts = () => {\n    const { data: contacts, error, isLoading } = useGetContactsQuery(); // всі контакти\n\n    return (\n        <div className= \"container\">\n            {/* <div className={s.filter}>\n                <Filter />\n            </div> */}\n            <div className={s.contactsContainer}>\n                <div className={s.leftSide}>\n                    <h1 className={s.title}>Add contact</h1>\n                    <ContactForm />\n                    <Filter />\n                    <TotalContacts/>\n                </div>\n                <div className={s.rightSide}>\n                    <h2 className={s.title}>Contacts</h2>\n                    \n                    {error && <h1>{error}</h1>}\n                    {isLoading && <Loader />}\n                    {contacts && <ContactList />}\n                </div>\n            </div>\n        </div>   \n    );\n};\n\nexport default Contacts;"],"names":["ContactForm","onSubmit","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","handleAddContact","preventDefault","some","contact","alert","reset","console","log","className","s","type","onChange","placeholder","pattern","title","required","id","onClick","filter","normalizedFilter","toLowerCase","includes","onDeleteContact","totalContacts","length","useDeleteContactMutation","deleteContact","useSelector","getFilter","filteredContacts","getVisibleContact","map","handleDeleteContact","dispatch","useDispatch","filtered","error","isLoading","Loader"],"sourceRoot":""}